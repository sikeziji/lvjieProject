package com.yzlm.cyl.cfragment.AppFunction;import com.yzlm.cyl.cfragment.Communication.Thread.SendManager;import static com.yzlm.cyl.cfragment.Config.Component.CfgTool.Config.getConfigData;import static com.yzlm.cyl.cfragment.Global.IOBoardUsed;import static com.yzlm.cyl.cfragment.Global.S1;/** * Created by zwj on 2017/6/2. */class AlarmLimitRunnable implements Runnable {    private static int RelayStatus = 0;    private String compName;    public AlarmLimitRunnable(String compName, int RelayStatus) {        this.RelayStatus = RelayStatus;        this.compName = compName;    }    public void run() {        /*水站不需要接口板，不读取流量*/        if (!IOBoardUsed) {            return;        }        byte[] byRelayStatus = new byte[4];        for (int i = 0; i < 4; i++) {            if (((RelayStatus >> i) & 0x01) == 1) {                byRelayStatus[i] = 1;            }        }        SendManager.SendCmd("IO" + "_" + "接口板继电器1输出_06_11", S1, 3, 200, byRelayStatus);        if (getConfigData(compName, "ALARM_TIME").equals("")) {            try {                Thread.sleep(3000);            } catch (InterruptedException e) {                e.printStackTrace();            }        } else if (getConfigData(compName, "ALARM_TIME").equals("999")) {            return;        } else {            try {                Thread.sleep(1000 * Integer.valueOf(getConfigData(compName, "ALARM_TIME")));            } catch (InterruptedException e) {                e.printStackTrace();            }        }        if (byRelayStatus[0] == 1) {            byRelayStatus[0] = 0;        }        SendManager.SendCmd("IO" + "_" + "接口板继电器1输出_06_11", S1, 3, 200, byRelayStatus);    }}